## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

version: '3.4'

volumes:
  grafana-storage:
  repo-storage:

services:
  cassandra:
    image: cassandra:4
    logging:
      driver: "none"
    ports:
      - "9042:9042"
  zookeeper:
    image: quay.io/strimzi/kafka:0.28.0-kafka-3.1.0
    logging:
      driver: "none"
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
  prometheus:
    build:
      dockerfile: Dockerfile
      context: prometheus
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana-oss
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
  kafka:
    image: quay.io/strimzi/kafka:0.28.0-kafka-3.1.0
    logging:
      driver: "none"
    command: [
      "sh", "-c",
      "sleep 10s && bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override num.partitions=$${KAFKA_NUM_PARTITIONS}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
  fp-commit-service:
    build:
      dockerfile: src/main/docker/Dockerfile
      context: fp-commit-service
    depends_on:
      - kafka
      - cassandra
    environment:
      KAFKA_HOST: kafka
      CASSANDRA_HOST: cassandra
      KAFKA_CONSUMERS_COUNT: 3
      OTEL_EXPORTER_OTLP_ENDPOINT: http://host.docker.internal:4317
  fp-repo-service:
    build:
      dockerfile: src/main/docker/Dockerfile
      context: fp-repo-service
    volumes:
      - repo-storage:/data
    depends_on:
      - kafka
      - fp-commit-service
    environment:
      KAFKA_HOST: kafka
      OTEL_EXPORTER_OTLP_ENDPOINT: http://host.docker.internal:4317
  fp-web:
    build:
      dockerfile: src/main/docker/Dockerfile
      context: fp-web
    depends_on:
      - kafka
      - fp-repo-service
    ports:
      - "8080:8080"
    environment:
      KAFKA_HOST: kafka
      OTEL_EXPORTER_OTLP_ENDPOINT: http://host.docker.internal:4317
